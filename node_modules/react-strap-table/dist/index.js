"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _axios = _interopRequireDefault(require("axios"));

require("./styles.css");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var ServerTable = /*#__PURE__*/function (_Component) {
  _inherits(ServerTable, _Component);

  var _super = _createSuper(ServerTable);

  function ServerTable(props) {
    var _this;

    _classCallCheck(this, ServerTable);

    _this = _super.call(this, props);

    if (_this.props.columns === undefined || _this.props.url === undefined) {
      throw "The prop 'columns' and 'url' is required.";
    }

    var default_texts = Object.assign(ServerTable.defaultProps.options.texts, {});
    var default_icons = Object.assign(ServerTable.defaultProps.options.icons, {});
    _this.state = {
      options: Object.assign(ServerTable.defaultProps.options, _this.props.options),
      requestData: {
        query: '',
        limit: 10,
        page: 1,
        orderBy: '',
        ascending: 0
      },
      data: [],
      isLoading: true
    };
    _this.state.requestData.limit = _this.state.options.perPage;
    _this.state.options.texts = Object.assign(default_texts, _this.props.options.texts);
    _this.state.options.icons = Object.assign(default_icons, _this.props.options.icons);

    _this.handleFetchData();

    _this.handlePerPageChange = _this.handlePerPageChange.bind(_assertThisInitialized(_this));
    _this.table_search_input = /*#__PURE__*/_react["default"].createRef();
    return _this;
  }

  _createClass(ServerTable, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps, nextState) {
      var _this2 = this;

      if (nextProps.url !== this.props.url) {
        this.setState({
          isLoading: true
        }, function () {
          _this2.handleFetchData();
        });
      }

      return true;
    }
  }, {
    key: "tableClass",
    value: function tableClass() {
      var classes = 'table ';
      this.props.hover ? classes += 'table-hover ' : '';
      this.props.bordered ? classes += 'table-bordered ' : '';
      this.props.condensed ? classes += 'table-condensed ' : '';
      this.props.striped ? classes += 'table-striped ' : '';
      return classes;
    }
  }, {
    key: "renderColumns",
    value: function renderColumns() {
      var _this3 = this;

      var columns = this.props.columns.slice();
      var headings = this.state.options.headings;
      var options = this.state.options;
      var columns_width = this.state.options.columnsWidth;
      return columns.map(function (column) {
        return /*#__PURE__*/_react["default"].createElement("th", {
          key: column,
          className: 'table-' + column + '-th ' + (options.sortable.includes(column) ? ' table-sort-th ' : '') + (options.columnsAlign.hasOwnProperty(column) ? ' text-' + options.columnsAlign[column] : ''),
          style: {
            maxWidth: columns_width.hasOwnProperty(column) ? Number.isInteger(columns_width[column]) ? columns_width[column] + '%' : columns_width[column] : ''
          },
          onClick: function onClick() {
            return _this3.handleSortColumnClick(column);
          }
        }, /*#__PURE__*/_react["default"].createElement("span", null, headings.hasOwnProperty(column) ? headings[column] : column.replace(/^\w/, function (c) {
          return c.toUpperCase();
        })), options.sortable.includes(column) && /*#__PURE__*/_react["default"].createElement("span", {
          className: 'table-sort-icon pull-right ' + (_this3.state.requestData.orderBy !== column ? options.icons.sortBase : _this3.state.requestData.ascending === 1 ? options.icons.sortUp : options.icons.sortDown)
        }));
      });
    }
  }, {
    key: "renderData",
    value: function renderData() {
      var _this4 = this;

      if (!this.props.refresh) {
        this.setState({
          isLoading: true
        }, function () {
          _this4.handleFetchData();
        });
      } else {
        var data = this.state.data.slice();
        var columns = this.props.columns.slice();
        var has_children = this.props.children !== undefined;
        var self = this;
        return data.map(function (row, row_index) {
          row.index = row_index;
          return /*#__PURE__*/_react["default"].createElement("tr", {
            key: row_index
          }, columns.map(function (column, index) {
            return /*#__PURE__*/_react["default"].createElement("td", {
              key: column + index,
              className: 'table-' + column + '-td'
            }, has_children ? self.props.children(row, column) : row[column]);
          }));
        });
      }
    }
  }, {
    key: "renderPagination",
    value: function renderPagination() {
      var _this5 = this;

      var options = this.state.options;
      var pagination = [];
      pagination.push( /*#__PURE__*/_react["default"].createElement("li", {
        key: "first",
        className: 'page-item ' + (options.currentPage === 1 || options.currentPage === 0 ? 'disabled' : '')
      }, /*#__PURE__*/_react["default"].createElement("a", {
        className: "page-link",
        href: "#",
        onClick: function onClick() {
          return _this5.handlePageChange(1);
        }
      }, "\xAB")));

      var _loop = function _loop(i) {
        pagination.push( /*#__PURE__*/_react["default"].createElement("li", {
          key: i,
          className: 'page-item ' + (options.currentPage === i ? 'active' : '')
        }, /*#__PURE__*/_react["default"].createElement("a", {
          className: "page-link",
          href: "#",
          onClick: function onClick() {
            return _this5.handlePageChange(i);
          }
        }, i)));
      };

      for (var i = 1; i <= options.lastPage; i++) {
        _loop(i);
      }

      pagination.push( /*#__PURE__*/_react["default"].createElement("li", {
        key: "last",
        className: 'page-item ' + (options.currentPage === options.lastPage ? 'disabled' : '')
      }, /*#__PURE__*/_react["default"].createElement("a", {
        className: "page-link",
        href: "#",
        onClick: function onClick() {
          return _this5.handlePageChange(options.lastPage);
        }
      }, "\xBB")));
      return pagination;
    }
  }, {
    key: "handleSortColumnClick",
    value: function handleSortColumnClick(column) {
      var _this6 = this;

      if (this.state.options.sortable.includes(column)) {
        var request_data = this.state.requestData;

        if (request_data.orderBy === column) {
          request_data.ascending = request_data.ascending === 1 ? 0 : 1;
        } else {
          request_data.orderBy = column;
          request_data.ascending = 1;
        }

        this.setState({
          requestData: request_data,
          isLoading: true
        }, function () {
          _this6.handleFetchData();
        });
      }
    }
  }, {
    key: "loadingData",
    value: function loadingData() {
      var _this7 = this;

      this.setState({
        isLoading: true
      }, function () {
        _this7.handleFetchData();
      });
    }
  }, {
    key: "handleFetchData",
    value: function handleFetchData() {
      var url = this.props.url;
      var options = Object.assign({}, this.state.options);
      var requestData = Object.assign({}, this.state.requestData);
      var self = this;
      var urlParams = new URLSearchParams(Object.entries(requestData));
      var com = url.includes('?') ? '&' : '?';

      _axios["default"].get(url + com + urlParams.toString()).then(function (response) {
        var response_data = response.data;
        var out_adapter = self.state.options.responseAdapter(response_data);

        if (out_adapter === undefined || !out_adapter || _typeof(out_adapter) !== 'object' || out_adapter.constructor !== Object || !out_adapter.hasOwnProperty('data') || !out_adapter.hasOwnProperty('total')) {
          throw "You must return 'object' contains 'data' and 'total' attributes";
        } else if (out_adapter.data === undefined || out_adapter.total === undefined) {
          throw "Please check from returned data or your 'responseAdapter'. \n response must have 'data' and 'total' attributes.";
        }

        options.total = out_adapter.total;

        if (out_adapter.total === 0) {
          options.currentPage = 0;
          options.lastPage = 0;
          options.from = 0;
          options.to = 0;
        } else {
          options.currentPage = requestData.page;
          options.lastPage = Math.ceil(out_adapter.total / requestData.limit);
          options.from = requestData.limit * (requestData.page - 1) + 1;
          options.to = options.lastPage === options.currentPage ? options.total : requestData.limit * requestData.page;
        }

        self.setState({
          data: out_adapter.data,
          options: options,
          isLoading: false
        });
      });
    }
  }, {
    key: "handlePerPageChange",
    value: function handlePerPageChange(event) {
      var _this8 = this;

      var _event$target = event.target,
          name = _event$target.name,
          value = _event$target.value;
      var options = Object.assign({}, this.state.options);
      var requestData = Object.assign({}, this.state.requestData);
      options.perPage = value;
      requestData.limit = event.target.value;
      requestData.page = 1;
      this.setState({
        requestData: requestData,
        options: options,
        isLoading: true
      }, function () {
        _this8.handleFetchData();
      });
    }
  }, {
    key: "handlePageChange",
    value: function handlePageChange(page) {
      var _this9 = this;

      var requestData = Object.assign({}, this.state.requestData);
      requestData.page = page;
      this.setState({
        requestData: requestData,
        isLoading: true
      }, function () {
        _this9.handleFetchData();
      });
    }
  }, {
    key: "handleSearchClick",
    value: function handleSearchClick() {
      var _this10 = this;

      var query = this.table_search_input.current.value;
      var requestData = Object.assign({}, this.state.requestData);
      requestData.query = query;
      requestData.page = 1;
      this.setState({
        requestData: requestData,
        isLoading: true
      }, function () {
        _this10.handleFetchData();
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this11 = this;

      return /*#__PURE__*/_react["default"].createElement("div", {
        className: "card react-strap-table"
      }, (this.props.perPage || this.props.search) && /*#__PURE__*/_react["default"].createElement("div", {
        className: "card-header text-center"
      }, this.props.perPage && /*#__PURE__*/_react["default"].createElement("div", {
        className: "float-left"
      }, /*#__PURE__*/_react["default"].createElement("span", null, this.state.options.texts.show, " "), /*#__PURE__*/_react["default"].createElement("label", null, /*#__PURE__*/_react["default"].createElement("select", {
        className: "form-control form-control-sm",
        onChange: this.handlePerPageChange
      }, this.state.options.perPageValues.map(function (value) {
        return /*#__PURE__*/_react["default"].createElement("option", {
          key: value,
          value: value
        }, value);
      }))), /*#__PURE__*/_react["default"].createElement("span", null, " ", this.state.options.texts.entries)), this.state.isLoading && this.state.options.loading, this.props.search && /*#__PURE__*/_react["default"].createElement("div", {
        className: "input-icon input-group-sm float-right"
      }, /*#__PURE__*/_react["default"].createElement("input", {
        type: "text",
        className: "form-control",
        style: {
          height: 34
        },
        placeholder: this.state.options.texts.search,
        ref: this.table_search_input,
        onKeyUp: function onKeyUp() {
          return _this11.handleSearchClick();
        }
      }), /*#__PURE__*/_react["default"].createElement("span", {
        className: "input-icon-addon"
      }, /*#__PURE__*/_react["default"].createElement("i", {
        className: "fe fe-search"
      })))), /*#__PURE__*/_react["default"].createElement("div", {
        className: "card-body"
      }, /*#__PURE__*/_react["default"].createElement("div", {
        className: "table-responsive",
        style: {
          maxHeight: this.props.options.maxHeightTable
        }
      }, /*#__PURE__*/_react["default"].createElement("table", {
        className: this.tableClass()
      }, /*#__PURE__*/_react["default"].createElement("thead", null, /*#__PURE__*/_react["default"].createElement("tr", null, this.renderColumns())), /*#__PURE__*/_react["default"].createElement("tbody", null, this.state.options.total > 0 ? this.renderData() : /*#__PURE__*/_react["default"].createElement("tr", {
        className: "text-center"
      }, /*#__PURE__*/_react["default"].createElement("td", {
        colSpan: this.props.columns.length
      }, this.state.options.texts.empty)))))), /*#__PURE__*/_react["default"].createElement("div", {
        className: "card-footer clearfix"
      }, this.props.pagination ? /*#__PURE__*/_react["default"].createElement("div", {
        className: "float-left"
      }, this.state.options.texts.showing + ' ' + this.state.options.from + ' ' + this.state.options.texts.to + ' ' + this.state.options.to + ' ' + this.state.options.texts.of + ' ' + this.state.options.total + ' ' + this.state.options.texts.entries) : /*#__PURE__*/_react["default"].createElement("div", {
        className: "float-left"
      }, this.state.options.total + ' ' + this.state.options.texts.entries), this.props.pagination && /*#__PURE__*/_react["default"].createElement("ul", {
        className: "pagination m-0 float-right"
      }, this.renderPagination())));
    }
  }]);

  return ServerTable;
}(_react.Component);

ServerTable.defaultProps = {
  options: {
    headings: {},
    sortable: [],
    columnsWidth: {},
    columnsAlign: {},
    initialPage: 1,
    perPage: 10,
    perPageValues: [10, 20, 25, 100],
    icons: {
      sortBase: 'fa fa-sort',
      sortUp: 'fa fa-sort-amount-up',
      sortDown: 'fa fa-sort-amount-down',
      search: 'fa fa-search'
    },
    texts: {
      show: 'Show',
      entries: 'entries',
      showing: 'Showing',
      to: 'to',
      of: 'of',
      search: 'Search',
      empty: 'Empty Results'
    },
    total: 10,
    currentPage: 1,
    lastPage: 1,
    from: 1,
    to: 1,
    loading: /*#__PURE__*/_react["default"].createElement("div", {
      style: {
        fontSize: 14,
        display: "initial"
      }
    }, /*#__PURE__*/_react["default"].createElement("span", {
      style: {
        fontSize: 18
      },
      className: "fa fa-spinner fa-spin"
    }), " Loading..."),
    responseAdapter: function responseAdapter(resp_data) {
      return {
        data: resp_data.data,
        total: resp_data.total
      };
    },
    maxHeightTable: 'unset'
  },
  perPage: true,
  search: true,
  pagination: true,
  refresh: true
};
ServerTable.propTypes = {
  columns: _propTypes["default"].array.isRequired,
  url: _propTypes["default"].string.isRequired,
  hover: _propTypes["default"].bool,
  bordered: _propTypes["default"].bool,
  condensed: _propTypes["default"].bool,
  striped: _propTypes["default"].bool,
  perPage: _propTypes["default"].bool,
  search: _propTypes["default"].bool,
  pagination: _propTypes["default"].bool,
  refresh: _propTypes["default"].bool,
  options: _propTypes["default"].object,
  children: _propTypes["default"].func
};
var _default = ServerTable;
exports["default"] = _default;